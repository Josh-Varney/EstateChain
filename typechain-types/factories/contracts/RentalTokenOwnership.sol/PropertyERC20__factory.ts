/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PropertyERC20,
  PropertyERC20Interface,
} from "../../../contracts/RentalTokenOwnership.sol/PropertyERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "buyerTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "buyers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeIncome",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBuyers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getIsRentalProperty",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastIncomeDistribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMonthlyIncome",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "getTokensBought",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWhatRentalIncome",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_monthlyIncome",
        type: "uint256",
      },
    ],
    name: "initializeRentalIncome",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_propertyOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isRentalProperty",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_monthlyIncome",
        type: "uint256",
      },
    ],
    name: "initializeSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isRentalProperty",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastIncomeDistribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monthlyIncome",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "propertyOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "propertyTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newMonthlyIncome",
        type: "uint256",
      },
    ],
    name: "setMonthlyIncome",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051612c91380380612c91833981810160405281019061003291906101da565b818181600390816100439190610473565b5080600490816100539190610473565b50505060016005819055505050610545565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6100cc82610083565b810181811067ffffffffffffffff821117156100eb576100ea610094565b5b80604052505050565b60006100fe610065565b905061010a82826100c3565b919050565b600067ffffffffffffffff82111561012a57610129610094565b5b61013382610083565b9050602081019050919050565b60005b8381101561015e578082015181840152602081019050610143565b60008484015250505050565b600061017d6101788461010f565b6100f4565b9050828152602081018484840111156101995761019861007e565b5b6101a4848285610140565b509392505050565b600082601f8301126101c1576101c0610079565b5b81516101d184826020860161016a565b91505092915050565b600080604083850312156101f1576101f061006f565b5b600083015167ffffffffffffffff81111561020f5761020e610074565b5b61021b858286016101ac565b925050602083015167ffffffffffffffff81111561023c5761023b610074565b5b610248858286016101ac565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806102a457607f821691505b6020821081036102b7576102b661025d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261031f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102e2565b61032986836102e2565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061037061036b61036684610341565b61034b565b610341565b9050919050565b6000819050919050565b61038a83610355565b61039e61039682610377565b8484546102ef565b825550505050565b600090565b6103b36103a6565b6103be818484610381565b505050565b5b818110156103e2576103d76000826103ab565b6001810190506103c4565b5050565b601f821115610427576103f8816102bd565b610401846102d2565b81016020851015610410578190505b61042461041c856102d2565b8301826103c3565b50505b505050565b600082821c905092915050565b600061044a6000198460080261042c565b1980831691505092915050565b60006104638383610439565b9150826002028217905092915050565b61047c82610252565b67ffffffffffffffff81111561049557610494610094565b5b61049f825461028c565b6104aa8282856103e6565b600060209050601f8311600181146104dd57600084156104cb578287015190505b6104d58582610457565b86555061053d565b601f1984166104eb866102bd565b60005b82811015610513578489015182556001820191506020850194506020810190506104ee565b86831015610530578489015161052c601f891682610439565b8355505b6001600288020188555050505b505050505050565b61273d806105546000396000f3fe6080604052600436106101cd5760003560e01c80637ff9b596116100f7578063ca9013cb11610095578063f13656eb11610064578063f13656eb14610673578063f2aa8218146106b0578063f446c38f146106ed578063f64bfaba14610718576101cd565b8063ca9013cb146105b9578063ce8fcab1146105e2578063d74a375d146105f9578063dd62ed3e14610636576101cd565b8063a9059cbb116100d1578063a9059cbb146104fb578063ad974f4c14610538578063ae0e16d614610563578063b01765b41461058e576101cd565b80637ff9b5961461047a57806395500d19146104a557806395d89b41146104d0576101cd565b806323b872dd1161016f5780635a33e9921161013e5780635a33e992146103bc5780635e73018c146103e757806370a08231146104125780637eb012691461044f576101cd565b806323b872dd1461030f578063313ce5671461034c5780633610724e1461037757806338d79ad514610393576101cd565b80631071ebc8116101ab5780631071ebc81461026557806318160ddd1461028e578063197a65f3146102b95780631e6e1f04146102e4576101cd565b80630605062f146101d257806306fdde03146101fd578063095ea7b314610228575b600080fd5b3480156101de57600080fd5b506101e7610743565b6040516101f49190611a5b565b60405180910390f35b34801561020957600080fd5b5061021261076d565b60405161021f9190611b06565b60405180910390f35b34801561023457600080fd5b5061024f600480360381019061024a9190611b8f565b6107ff565b60405161025c9190611bea565b60405180910390f35b34801561027157600080fd5b5061028c60048036038101906102879190611c05565b610822565b005b34801561029a57600080fd5b506102a36108c7565b6040516102b09190611c41565b60405180910390f35b3480156102c557600080fd5b506102ce6108d1565b6040516102db9190611c41565b60405180910390f35b3480156102f057600080fd5b506102f96108d7565b6040516103069190611bea565b60405180910390f35b34801561031b57600080fd5b5061033660048036038101906103319190611c5c565b6108ee565b6040516103439190611bea565b60405180910390f35b34801561035857600080fd5b5061036161091d565b60405161036e9190611ccb565b60405180910390f35b610391600480360381019061038c9190611c05565b610926565b005b34801561039f57600080fd5b506103ba60048036038101906103b59190611c05565b610b64565b005b3480156103c857600080fd5b506103d1610c4d565b6040516103de9190611c41565b60405180910390f35b3480156103f357600080fd5b506103fc610c57565b6040516104099190611c41565b60405180910390f35b34801561041e57600080fd5b5061043960048036038101906104349190611ce6565b610c5d565b6040516104469190611c41565b60405180910390f35b34801561045b57600080fd5b50610464610ca5565b6040516104719190611bea565b60405180910390f35b34801561048657600080fd5b5061048f610cb8565b60405161049c9190611c41565b60405180910390f35b3480156104b157600080fd5b506104ba610cbe565b6040516104c79190611c41565b60405180910390f35b3480156104dc57600080fd5b506104e5610cc8565b6040516104f29190611b06565b60405180910390f35b34801561050757600080fd5b50610522600480360381019061051d9190611b8f565b610d5a565b60405161052f9190611bea565b60405180910390f35b34801561054457600080fd5b5061054d610d7d565b60405161055a9190611c41565b60405180910390f35b34801561056f57600080fd5b50610578610d87565b6040516105859190611c41565b60405180910390f35b34801561059a57600080fd5b506105a3610de0565b6040516105b09190611c41565b60405180910390f35b3480156105c557600080fd5b506105e060048036038101906105db9190611d3f565b610de6565b005b3480156105ee57600080fd5b506105f7610f2a565b005b34801561060557600080fd5b50610620600480360381019061061b9190611ce6565b6111ce565b60405161062d9190611c41565b60405180910390f35b34801561064257600080fd5b5061065d60048036038101906106589190611dba565b611217565b60405161066a9190611c41565b60405180910390f35b34801561067f57600080fd5b5061069a60048036038101906106959190611ce6565b61129e565b6040516106a79190611c41565b60405180910390f35b3480156106bc57600080fd5b506106d760048036038101906106d29190611c05565b6112b6565b6040516106e49190611a5b565b60405180910390f35b3480156106f957600080fd5b506107026112f5565b60405161070f9190611a5b565b60405180910390f35b34801561072457600080fd5b5061072d61131b565b60405161073a9190611eb8565b60405180910390f35b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606003805461077c90611f09565b80601f01602080910402602001604051908101604052809291908181526020018280546107a890611f09565b80156107f55780601f106107ca576101008083540402835291602001916107f5565b820191906000526020600020905b8154815290600101906020018083116107d857829003601f168201915b5050505050905090565b60008061080a6113a9565b90506108178185856113b1565b600191505092915050565b600d60009054906101000a900460ff16610871576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086890611f86565b60405180910390fd5b6000600b54146108b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad90612018565b60405180910390fd5b80600b8190555042600c8190555050565b6000600254905090565b600b5481565b6000600d60009054906101000a900460ff16905090565b6000806108f96113a9565b90506109068582856113c3565b610911858585611458565b60019150509392505050565b60006012905090565b61092e61154c565b60006007548261093e9190612067565b905080341015610983576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097a906120f5565b60405180910390fd5b803411156109e457600081346109999190612115565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156109e1573d6000803e3d6000fd5b50505b6109ef303384611458565b81600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a3e9190612149565b92505081905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610aad573d6000803e3d6000fd5b5081600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610b5857600a339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50610b61611592565b50565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610beb906121ef565b60405180910390fd5b600d60009054906101000a900460ff16610c43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3a90611f86565b60405180910390fd5b80600b8190555050565b6000600b54905090565b600c5481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600d60009054906101000a900460ff1681565b60075481565b6000600c54905090565b606060048054610cd790611f09565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0390611f09565b8015610d505780601f10610d2557610100808354040283529160200191610d50565b820191906000526020600020905b815481529060010190602001808311610d3357829003601f168201915b5050505050905090565b600080610d656113a9565b9050610d72818585611458565b600191505092915050565b6000600654905090565b6000600d60009054906101000a900460ff16610dd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcf90611f86565b60405180910390fd5b600b54905090565b60065481565b600060065414610e2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e229061225b565b60405180910390fd5b610e3361091d565b60ff16600a610e4291906123ae565b85610e4d9190612067565b6006819055508360078190555082600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600d60006101000a81548160ff021916908315150217905550610ec13060065461159c565b600d60009054906101000a900460ff1615610f235760008111610f19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f109061246b565b60405180910390fd5b610f2281610822565b5b5050505050565b610f3261154c565b600d60009054906101000a900460ff16610f81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7890611f86565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611011576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611008906124fd565b60405180910390fd5b62278d00600c546110229190612149565b421015611064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105b9061258f565b60405180910390fd5b600b544710156110a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a090612621565b60405180910390fd5b600060065490506000600b54905060005b600a805490508110156111ba576000600a82815481106110dd576110dc612641565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008484600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111589190612067565b611162919061269f565b90508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156111aa573d6000803e3d6000fd5b50505080806001019150506110ba565b5042600c8190555050506111cc611592565b565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60096020528060005260406000206000915090505481565b600a81815481106112c657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600a80548060200260200160405190810160405280929190818152602001828054801561139f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611355575b5050505050905090565b600033905090565b6113be838383600161161e565b505050565b60006113cf8484611217565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156114525781811015611442578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611439939291906126d0565b60405180910390fd5b6114518484848403600061161e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114ca5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114c19190611a5b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361153c5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115339190611a5b565b60405180910390fd5b6115478383836117f5565b505050565b600260055403611588576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600581905550565b6001600581905550565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361160e5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016116059190611a5b565b60405180910390fd5b61161a600083836117f5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036116905760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016116879190611a5b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117025760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016116f99190611a5b565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156117ef578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117e69190611c41565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361184757806002600082825461183b9190612149565b9250508190555061191a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156118d3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016118ca939291906126d0565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361196357806002600082825403925050819055506119b0565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611a0d9190611c41565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a4582611a1a565b9050919050565b611a5581611a3a565b82525050565b6000602082019050611a706000830184611a4c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ab0578082015181840152602081019050611a95565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ad882611a76565b611ae28185611a81565b9350611af2818560208601611a92565b611afb81611abc565b840191505092915050565b60006020820190508181036000830152611b208184611acd565b905092915050565b600080fd5b611b3681611a3a565b8114611b4157600080fd5b50565b600081359050611b5381611b2d565b92915050565b6000819050919050565b611b6c81611b59565b8114611b7757600080fd5b50565b600081359050611b8981611b63565b92915050565b60008060408385031215611ba657611ba5611b28565b5b6000611bb485828601611b44565b9250506020611bc585828601611b7a565b9150509250929050565b60008115159050919050565b611be481611bcf565b82525050565b6000602082019050611bff6000830184611bdb565b92915050565b600060208284031215611c1b57611c1a611b28565b5b6000611c2984828501611b7a565b91505092915050565b611c3b81611b59565b82525050565b6000602082019050611c566000830184611c32565b92915050565b600080600060608486031215611c7557611c74611b28565b5b6000611c8386828701611b44565b9350506020611c9486828701611b44565b9250506040611ca586828701611b7a565b9150509250925092565b600060ff82169050919050565b611cc581611caf565b82525050565b6000602082019050611ce06000830184611cbc565b92915050565b600060208284031215611cfc57611cfb611b28565b5b6000611d0a84828501611b44565b91505092915050565b611d1c81611bcf565b8114611d2757600080fd5b50565b600081359050611d3981611d13565b92915050565b600080600080600060a08688031215611d5b57611d5a611b28565b5b6000611d6988828901611b7a565b9550506020611d7a88828901611b7a565b9450506040611d8b88828901611b44565b9350506060611d9c88828901611d2a565b9250506080611dad88828901611b7a565b9150509295509295909350565b60008060408385031215611dd157611dd0611b28565b5b6000611ddf85828601611b44565b9250506020611df085828601611b44565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611e2f81611a3a565b82525050565b6000611e418383611e26565b60208301905092915050565b6000602082019050919050565b6000611e6582611dfa565b611e6f8185611e05565b9350611e7a83611e16565b8060005b83811015611eab578151611e928882611e35565b9750611e9d83611e4d565b925050600181019050611e7e565b5085935050505092915050565b60006020820190508181036000830152611ed28184611e5a565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f2157607f821691505b602082108103611f3457611f33611eda565b5b50919050565b7f54686973206973206e6f7420612072656e74616c2070726f7065727479000000600082015250565b6000611f70601d83611a81565b9150611f7b82611f3a565b602082019050919050565b60006020820190508181036000830152611f9f81611f63565b9050919050565b7f52656e74616c20696e636f6d6520616c726561647920696e697469616c697a6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000612002602183611a81565b915061200d82611fa6565b604082019050919050565b6000602082019050818103600083015261203181611ff5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061207282611b59565b915061207d83611b59565b925082820261208b81611b59565b915082820484148315176120a2576120a1612038565b5b5092915050565b7f496e73756666696369656e74204554482073656e740000000000000000000000600082015250565b60006120df601583611a81565b91506120ea826120a9565b602082019050919050565b6000602082019050818103600083015261210e816120d2565b9050919050565b600061212082611b59565b915061212b83611b59565b925082820390508181111561214357612142612038565b5b92915050565b600061215482611b59565b915061215f83611b59565b925082820190508082111561217757612176612038565b5b92915050565b7f4f6e6c79207468652070726f7065727479206f776e65722063616e207365742060008201527f74686520696e636f6d6500000000000000000000000000000000000000000000602082015250565b60006121d9602a83611a81565b91506121e48261217d565b604082019050919050565b60006020820190508181036000830152612208816121cc565b9050919050565b7f53616c6520616c726561647920696e697469616c697a65640000000000000000600082015250565b6000612245601883611a81565b91506122508261220f565b602082019050919050565b6000602082019050818103600083015261227481612238565b9050919050565b60008160011c9050919050565b6000808291508390505b60018511156122d2578086048111156122ae576122ad612038565b5b60018516156122bd5780820291505b80810290506122cb8561227b565b9450612292565b94509492505050565b6000826122eb57600190506123a7565b816122f957600090506123a7565b816001811461230f576002811461231957612348565b60019150506123a7565b60ff84111561232b5761232a612038565b5b8360020a91508482111561234257612341612038565b5b506123a7565b5060208310610133831016604e8410600b841016171561237d5782820a90508381111561237857612377612038565b5b6123a7565b61238a8484846001612288565b925090508184048111156123a1576123a0612038565b5b81810290505b9392505050565b60006123b982611b59565b91506123c483611b59565b92506123f17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846122db565b905092915050565b7f52656e74616c20696e636f6d65206d757374206265206772656174657220746860008201527f616e207a65726f00000000000000000000000000000000000000000000000000602082015250565b6000612455602783611a81565b9150612460826123f9565b604082019050919050565b6000602082019050818103600083015261248481612448565b9050919050565b7f4f6e6c79207468652070726f7065727479206f776e65722063616e206469737460008201527f72696275746520696e636f6d6500000000000000000000000000000000000000602082015250565b60006124e7602d83611a81565b91506124f28261248b565b604082019050919050565b60006020820190508181036000830152612516816124da565b9050919050565b7f4d6f6e74686c7920696e636f6d6520646973747269627574696f6e206973206e60008201527f6f74206475652079657400000000000000000000000000000000000000000000602082015250565b6000612579602a83611a81565b91506125848261251d565b604082019050919050565b600060208201905081810360008301526125a88161256c565b9050919050565b7f4e6f7420656e6f7567682045544820696e2074686520636f6e7472616374207460008201527f6f20646973747269627574650000000000000000000000000000000000000000602082015250565b600061260b602c83611a81565b9150612616826125af565b604082019050919050565b6000602082019050818103600083015261263a816125fe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006126aa82611b59565b91506126b583611b59565b9250826126c5576126c4612670565b5b828204905092915050565b60006060820190506126e56000830186611a4c565b6126f26020830185611c32565b6126ff6040830184611c32565b94935050505056fea264697066735822122082c1a183cbca2f7be53e87fa8b4fdf1155c8c65100d3ebf364047fcf2bae7acf64736f6c634300081c0033";

type PropertyERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PropertyERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PropertyERC20__factory extends ContractFactory {
  constructor(...args: PropertyERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override deploy(
    _name: string,
    _symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<
      PropertyERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PropertyERC20__factory {
    return super.connect(runner) as PropertyERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PropertyERC20Interface {
    return new Interface(_abi) as PropertyERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PropertyERC20 {
    return new Contract(address, _abi, runner) as unknown as PropertyERC20;
  }
}
