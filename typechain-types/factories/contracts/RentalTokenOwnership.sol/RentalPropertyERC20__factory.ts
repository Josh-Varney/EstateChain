/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RentalPropertyERC20,
  RentalPropertyERC20Interface,
} from "../../../contracts/RentalTokenOwnership.sol/RentalPropertyERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_propertyOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_monthlyIncome",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "buyerTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "buyers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeIncome",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBuyers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "getTokensBought",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastIncomeDistribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monthlyIncome",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "propertyOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "propertyTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newMonthlyIncome",
        type: "uint256",
      },
    ],
    name: "setMonthlyIncome",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516129af3803806129af833981810160405281019061003291906105be565b85858160039081610043919061089a565b508060049081610053919061089a565b505050600160058190555061006c6100ff60201b60201c565b60ff16600a61007b9190610ace565b846100869190610b19565b6006819055508260078190555081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060098190555042600a819055506100f43060065461010860201b60201c565b505050505050610c1a565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361017a5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016101719190610b6a565b60405180910390fd5b61018c6000838361019060201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101e25780600260008282546101d69190610b85565b925050819055506102b5565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561026e578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161026593929190610bc8565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102fe578060026000828254039250508190555061034b565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103a89190610bff565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61041c826103d3565b810181811067ffffffffffffffff8211171561043b5761043a6103e4565b5b80604052505050565b600061044e6103b5565b905061045a8282610413565b919050565b600067ffffffffffffffff82111561047a576104796103e4565b5b610483826103d3565b9050602081019050919050565b60005b838110156104ae578082015181840152602081019050610493565b60008484015250505050565b60006104cd6104c88461045f565b610444565b9050828152602081018484840111156104e9576104e86103ce565b5b6104f4848285610490565b509392505050565b600082601f830112610511576105106103c9565b5b81516105218482602086016104ba565b91505092915050565b6000819050919050565b61053d8161052a565b811461054857600080fd5b50565b60008151905061055a81610534565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061058b82610560565b9050919050565b61059b81610580565b81146105a657600080fd5b50565b6000815190506105b881610592565b92915050565b60008060008060008060c087890312156105db576105da6103bf565b5b600087015167ffffffffffffffff8111156105f9576105f86103c4565b5b61060589828a016104fc565b965050602087015167ffffffffffffffff811115610626576106256103c4565b5b61063289828a016104fc565b955050604061064389828a0161054b565b945050606061065489828a0161054b565b935050608061066589828a016105a9565b92505060a061067689828a0161054b565b9150509295509295509295565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106d557607f821691505b6020821081036106e8576106e761068e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610713565b61075a8683610713565b95508019841693508086168417925050509392505050565b6000819050919050565b600061079761079261078d8461052a565b610772565b61052a565b9050919050565b6000819050919050565b6107b18361077c565b6107c56107bd8261079e565b848454610720565b825550505050565b600090565b6107da6107cd565b6107e58184846107a8565b505050565b5b81811015610809576107fe6000826107d2565b6001810190506107eb565b5050565b601f82111561084e5761081f816106ee565b61082884610703565b81016020851015610837578190505b61084b61084385610703565b8301826107ea565b50505b505050565b600082821c905092915050565b600061087160001984600802610853565b1980831691505092915050565b600061088a8383610860565b9150826002028217905092915050565b6108a382610683565b67ffffffffffffffff8111156108bc576108bb6103e4565b5b6108c682546106bd565b6108d182828561080d565b600060209050601f83116001811461090457600084156108f2578287015190505b6108fc858261087e565b865550610964565b601f198416610912866106ee565b60005b8281101561093a57848901518255600182019150602085019450602081019050610915565b868310156109575784890151610953601f891682610860565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156109f2578086048111156109ce576109cd61096c565b5b60018516156109dd5780820291505b80810290506109eb8561099b565b94506109b2565b94509492505050565b600082610a0b5760019050610ac7565b81610a195760009050610ac7565b8160018114610a2f5760028114610a3957610a68565b6001915050610ac7565b60ff841115610a4b57610a4a61096c565b5b8360020a915084821115610a6257610a6161096c565b5b50610ac7565b5060208310610133831016604e8410600b8410161715610a9d5782820a905083811115610a9857610a9761096c565b5b610ac7565b610aaa84848460016109a8565b92509050818404811115610ac157610ac061096c565b5b81810290505b9392505050565b6000610ad98261052a565b9150610ae48361052a565b9250610b117fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846109fb565b905092915050565b6000610b248261052a565b9150610b2f8361052a565b9250828202610b3d8161052a565b91508282048414831517610b5457610b5361096c565b5b5092915050565b610b6481610580565b82525050565b6000602082019050610b7f6000830184610b5b565b92915050565b6000610b908261052a565b9150610b9b8361052a565b9250828201905080821115610bb357610bb261096c565b5b92915050565b610bc28161052a565b82525050565b6000606082019050610bdd6000830186610b5b565b610bea6020830185610bb9565b610bf76040830184610bb9565b949350505050565b6000602082019050610c146000830184610bb9565b92915050565b611d8680610c296000396000f3fe6080604052600436106101355760003560e01c80637ff9b596116100ab578063d74a375d1161006f578063d74a375d1461040d578063dd62ed3e1461044a578063f13656eb14610487578063f2aa8218146104c4578063f446c38f14610501578063f64bfaba1461052c57610135565b80637ff9b5961461033857806395d89b4114610363578063a9059cbb1461038e578063b01765b4146103cb578063ce8fcab1146103f657610135565b806323b872dd116100fd57806323b872dd14610223578063313ce567146102605780633610724e1461028b57806338d79ad5146102a75780635e73018c146102d057806370a08231146102fb57610135565b80630605062f1461013a57806306fdde0314610165578063095ea7b31461019057806318160ddd146101cd578063197a65f3146101f8575b600080fd5b34801561014657600080fd5b5061014f610557565b60405161015c91906114c5565b60405180910390f35b34801561017157600080fd5b5061017a610581565b6040516101879190611570565b60405180910390f35b34801561019c57600080fd5b506101b760048036038101906101b291906115f9565b610613565b6040516101c49190611654565b60405180910390f35b3480156101d957600080fd5b506101e2610636565b6040516101ef919061167e565b60405180910390f35b34801561020457600080fd5b5061020d610640565b60405161021a919061167e565b60405180910390f35b34801561022f57600080fd5b5061024a60048036038101906102459190611699565b610646565b6040516102579190611654565b60405180910390f35b34801561026c57600080fd5b50610275610675565b6040516102829190611708565b60405180910390f35b6102a560048036038101906102a09190611723565b61067e565b005b3480156102b357600080fd5b506102ce60048036038101906102c99190611723565b6108bc565b005b3480156102dc57600080fd5b506102e5610956565b6040516102f2919061167e565b60405180910390f35b34801561030757600080fd5b50610322600480360381019061031d9190611750565b61095c565b60405161032f919061167e565b60405180910390f35b34801561034457600080fd5b5061034d6109a4565b60405161035a919061167e565b60405180910390f35b34801561036f57600080fd5b506103786109aa565b6040516103859190611570565b60405180910390f35b34801561039a57600080fd5b506103b560048036038101906103b091906115f9565b610a3c565b6040516103c29190611654565b60405180910390f35b3480156103d757600080fd5b506103e0610a5f565b6040516103ed919061167e565b60405180910390f35b34801561040257600080fd5b5061040b610a65565b005b34801561041957600080fd5b50610434600480360381019061042f9190611750565b610cba565b604051610441919061167e565b60405180910390f35b34801561045657600080fd5b50610471600480360381019061046c919061177d565b610d03565b60405161047e919061167e565b60405180910390f35b34801561049357600080fd5b506104ae60048036038101906104a99190611750565b610d8a565b6040516104bb919061167e565b60405180910390f35b3480156104d057600080fd5b506104eb60048036038101906104e69190611723565b610da2565b6040516104f891906114c5565b60405180910390f35b34801561050d57600080fd5b50610516610de1565b60405161052391906114c5565b60405180910390f35b34801561053857600080fd5b50610541610e07565b60405161054e919061187b565b60405180910390f35b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060038054610590906118cc565b80601f01602080910402602001604051908101604052809291908181526020018280546105bc906118cc565b80156106095780601f106105de57610100808354040283529160200191610609565b820191906000526020600020905b8154815290600101906020018083116105ec57829003601f168201915b5050505050905090565b60008061061e610e95565b905061062b818585610e9d565b600191505092915050565b6000600254905090565b60095481565b600080610651610e95565b905061065e858285610eaf565b610669858585610f44565b60019150509392505050565b60006012905090565b610686611038565b600060075482610696919061192c565b9050803410156106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d2906119ba565b60405180910390fd5b8034111561073c57600081346106f191906119da565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610739573d6000803e3d6000fd5b50505b610747303384610f44565b81600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107969190611a0e565b92505081905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610805573d6000803e3d6000fd5b5081600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036108b057600c339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b506108b961107e565b50565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461094c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094390611ab4565b60405180910390fd5b8060098190555050565b600a5481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60075481565b6060600480546109b9906118cc565b80601f01602080910402602001604051908101604052809291908181526020018280546109e5906118cc565b8015610a325780601f10610a0757610100808354040283529160200191610a32565b820191906000526020600020905b815481529060010190602001808311610a1557829003601f168201915b5050505050905090565b600080610a47610e95565b9050610a54818585610f44565b600191505092915050565b60065481565b610a6d611038565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af490611b46565b60405180910390fd5b62278d00600a54610b0e9190611a0e565b421015610b50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4790611bd8565b60405180910390fd5b600954471015610b95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8c90611c6a565b60405180910390fd5b600060065490506000600954905060005b600c80549050811015610ca6576000600c8281548110610bc957610bc8611c8a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008484600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c44919061192c565b610c4e9190611ce8565b90508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610c96573d6000803e3d6000fd5b5050508080600101915050610ba6565b5042600a819055505050610cb861107e565b565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600b6020528060005260406000206000915090505481565b600c8181548110610db257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600c805480602002602001604051908101604052809291908181526020018280548015610e8b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610e41575b5050505050905090565b600033905090565b610eaa8383836001611088565b505050565b6000610ebb8484610d03565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610f3e5781811015610f2e578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f2593929190611d19565b60405180910390fd5b610f3d84848484036000611088565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fb65760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610fad91906114c5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110285760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161101f91906114c5565b60405180910390fd5b61103383838361125f565b505050565b600260055403611074576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600581905550565b6001600581905550565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036110fa5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016110f191906114c5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361116c5760006040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161116391906114c5565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611259578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611250919061167e565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112b15780600260008282546112a59190611a0e565b92505081905550611384565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561133d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161133493929190611d19565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113cd578060026000828254039250508190555061141a565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611477919061167e565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114af82611484565b9050919050565b6114bf816114a4565b82525050565b60006020820190506114da60008301846114b6565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561151a5780820151818401526020810190506114ff565b60008484015250505050565b6000601f19601f8301169050919050565b6000611542826114e0565b61154c81856114eb565b935061155c8185602086016114fc565b61156581611526565b840191505092915050565b6000602082019050818103600083015261158a8184611537565b905092915050565b600080fd5b6115a0816114a4565b81146115ab57600080fd5b50565b6000813590506115bd81611597565b92915050565b6000819050919050565b6115d6816115c3565b81146115e157600080fd5b50565b6000813590506115f3816115cd565b92915050565b600080604083850312156116105761160f611592565b5b600061161e858286016115ae565b925050602061162f858286016115e4565b9150509250929050565b60008115159050919050565b61164e81611639565b82525050565b60006020820190506116696000830184611645565b92915050565b611678816115c3565b82525050565b6000602082019050611693600083018461166f565b92915050565b6000806000606084860312156116b2576116b1611592565b5b60006116c0868287016115ae565b93505060206116d1868287016115ae565b92505060406116e2868287016115e4565b9150509250925092565b600060ff82169050919050565b611702816116ec565b82525050565b600060208201905061171d60008301846116f9565b92915050565b60006020828403121561173957611738611592565b5b6000611747848285016115e4565b91505092915050565b60006020828403121561176657611765611592565b5b6000611774848285016115ae565b91505092915050565b6000806040838503121561179457611793611592565b5b60006117a2858286016115ae565b92505060206117b3858286016115ae565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6117f2816114a4565b82525050565b600061180483836117e9565b60208301905092915050565b6000602082019050919050565b6000611828826117bd565b61183281856117c8565b935061183d836117d9565b8060005b8381101561186e57815161185588826117f8565b975061186083611810565b925050600181019050611841565b5085935050505092915050565b60006020820190508181036000830152611895818461181d565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118e457607f821691505b6020821081036118f7576118f661189d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611937826115c3565b9150611942836115c3565b9250828202611950816115c3565b91508282048414831517611967576119666118fd565b5b5092915050565b7f496e73756666696369656e74204554482073656e740000000000000000000000600082015250565b60006119a46015836114eb565b91506119af8261196e565b602082019050919050565b600060208201905081810360008301526119d381611997565b9050919050565b60006119e5826115c3565b91506119f0836115c3565b9250828203905081811115611a0857611a076118fd565b5b92915050565b6000611a19826115c3565b9150611a24836115c3565b9250828201905080821115611a3c57611a3b6118fd565b5b92915050565b7f4f6e6c79207468652070726f7065727479206f776e65722063616e207365742060008201527f74686520696e636f6d6500000000000000000000000000000000000000000000602082015250565b6000611a9e602a836114eb565b9150611aa982611a42565b604082019050919050565b60006020820190508181036000830152611acd81611a91565b9050919050565b7f4f6e6c79207468652070726f7065727479206f776e65722063616e206469737460008201527f72696275746520696e636f6d6500000000000000000000000000000000000000602082015250565b6000611b30602d836114eb565b9150611b3b82611ad4565b604082019050919050565b60006020820190508181036000830152611b5f81611b23565b9050919050565b7f4d6f6e74686c7920696e636f6d6520646973747269627574696f6e206973206e60008201527f6f74206475652079657400000000000000000000000000000000000000000000602082015250565b6000611bc2602a836114eb565b9150611bcd82611b66565b604082019050919050565b60006020820190508181036000830152611bf181611bb5565b9050919050565b7f4e6f7420656e6f7567682045544820696e2074686520636f6e7472616374207460008201527f6f20646973747269627574650000000000000000000000000000000000000000602082015250565b6000611c54602c836114eb565b9150611c5f82611bf8565b604082019050919050565b60006020820190508181036000830152611c8381611c47565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611cf3826115c3565b9150611cfe836115c3565b925082611d0e57611d0d611cb9565b5b828204905092915050565b6000606082019050611d2e60008301866114b6565b611d3b602083018561166f565b611d48604083018461166f565b94935050505056fea264697066735822122064f4ad7ff6b22453844439c8294d8e774e649f8b2c938337763b74fbbdfcebf364736f6c634300081c0033";

type RentalPropertyERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RentalPropertyERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RentalPropertyERC20__factory extends ContractFactory {
  constructor(...args: RentalPropertyERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _totalSupply: BigNumberish,
    _tokenPrice: BigNumberish,
    _propertyOwner: AddressLike,
    _monthlyIncome: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _totalSupply,
      _tokenPrice,
      _propertyOwner,
      _monthlyIncome,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _totalSupply: BigNumberish,
    _tokenPrice: BigNumberish,
    _propertyOwner: AddressLike,
    _monthlyIncome: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _totalSupply,
      _tokenPrice,
      _propertyOwner,
      _monthlyIncome,
      overrides || {}
    ) as Promise<
      RentalPropertyERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): RentalPropertyERC20__factory {
    return super.connect(runner) as RentalPropertyERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RentalPropertyERC20Interface {
    return new Interface(_abi) as RentalPropertyERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RentalPropertyERC20 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as RentalPropertyERC20;
  }
}
