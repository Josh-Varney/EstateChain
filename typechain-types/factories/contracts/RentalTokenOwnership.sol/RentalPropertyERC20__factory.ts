/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RentalPropertyERC20,
  RentalPropertyERC20Interface,
} from "../../../contracts/RentalTokenOwnership.sol/RentalPropertyERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "buyerTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "buyers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeIncome",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBuyers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastIncomeDistribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMonthlyIncome",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "getTokensBought",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_monthlyIncome",
        type: "uint256",
      },
    ],
    name: "initializeRentalIncome",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_propertyOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isRentalProperty",
        type: "bool",
      },
    ],
    name: "initializeSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isRentalProperty",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastIncomeDistribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monthlyIncome",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "propertyOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "propertyTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newMonthlyIncome",
        type: "uint256",
      },
    ],
    name: "setMonthlyIncome",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051612a5c380380612a5c833981810160405281019061003291906101da565b818181600390816100439190610473565b5080600490816100539190610473565b50505060016005819055505050610545565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6100cc82610083565b810181811067ffffffffffffffff821117156100eb576100ea610094565b5b80604052505050565b60006100fe610065565b905061010a82826100c3565b919050565b600067ffffffffffffffff82111561012a57610129610094565b5b61013382610083565b9050602081019050919050565b60005b8381101561015e578082015181840152602081019050610143565b60008484015250505050565b600061017d6101788461010f565b6100f4565b9050828152602081018484840111156101995761019861007e565b5b6101a4848285610140565b509392505050565b600082601f8301126101c1576101c0610079565b5b81516101d184826020860161016a565b91505092915050565b600080604083850312156101f1576101f061006f565b5b600083015167ffffffffffffffff81111561020f5761020e610074565b5b61021b858286016101ac565b925050602083015167ffffffffffffffff81111561023c5761023b610074565b5b610248858286016101ac565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806102a457607f821691505b6020821081036102b7576102b661025d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261031f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102e2565b61032986836102e2565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061037061036b61036684610341565b61034b565b610341565b9050919050565b6000819050919050565b61038a83610355565b61039e61039682610377565b8484546102ef565b825550505050565b600090565b6103b36103a6565b6103be818484610381565b505050565b5b818110156103e2576103d76000826103ab565b6001810190506103c4565b5050565b601f821115610427576103f8816102bd565b610401846102d2565b81016020851015610410578190505b61042461041c856102d2565b8301826103c3565b50505b505050565b600082821c905092915050565b600061044a6000198460080261042c565b1980831691505092915050565b60006104638383610439565b9150826002028217905092915050565b61047c82610252565b67ffffffffffffffff81111561049557610494610094565b5b61049f825461028c565b6104aa8282856103e6565b600060209050601f8311600181146104dd57600084156104cb578287015190505b6104d58582610457565b86555061053d565b601f1984166104eb866102bd565b60005b82811015610513578489015182556001820191506020850194506020810190506104ee565b86831015610530578489015161052c601f891682610439565b8355505b6001600288020188555050505b505050505050565b612508806105546000396000f3fe60806040526004361061019c5760003560e01c80637eb01269116100ec578063d74a375d1161008a578063f13656eb11610064578063f13656eb146105c1578063f2aa8218146105fe578063f446c38f1461063b578063f64bfaba146106665761019c565b8063d74a375d1461051e578063dd62ed3e1461055b578063ef468318146105985761019c565b806395d89b41116100c657806395d89b4114610474578063a9059cbb1461049f578063b01765b4146104dc578063ce8fcab1146105075761019c565b80637eb01269146103f35780637ff9b5961461041e57806395500d19146104495761019c565b806323b872dd1161015957806338d79ad51161013357806338d79ad5146103375780635a33e992146103605780635e73018c1461038b57806370a08231146103b65761019c565b806323b872dd146102b3578063313ce567146102f05780633610724e1461031b5761019c565b80630605062f146101a157806306fdde03146101cc578063095ea7b3146101f75780631071ebc81461023457806318160ddd1461025d578063197a65f314610288575b600080fd5b3480156101ad57600080fd5b506101b6610691565b6040516101c391906118cc565b60405180910390f35b3480156101d857600080fd5b506101e16106bb565b6040516101ee9190611977565b60405180910390f35b34801561020357600080fd5b5061021e60048036038101906102199190611a00565b61074d565b60405161022b9190611a5b565b60405180910390f35b34801561024057600080fd5b5061025b60048036038101906102569190611a76565b610770565b005b34801561026957600080fd5b50610272610815565b60405161027f9190611ab2565b60405180910390f35b34801561029457600080fd5b5061029d61081f565b6040516102aa9190611ab2565b60405180910390f35b3480156102bf57600080fd5b506102da60048036038101906102d59190611acd565b610825565b6040516102e79190611a5b565b60405180910390f35b3480156102fc57600080fd5b50610305610854565b6040516103129190611b3c565b60405180910390f35b61033560048036038101906103309190611a76565b61085d565b005b34801561034357600080fd5b5061035e60048036038101906103599190611a76565b610a9b565b005b34801561036c57600080fd5b50610375610b84565b6040516103829190611ab2565b60405180910390f35b34801561039757600080fd5b506103a0610b8e565b6040516103ad9190611ab2565b60405180910390f35b3480156103c257600080fd5b506103dd60048036038101906103d89190611b57565b610b94565b6040516103ea9190611ab2565b60405180910390f35b3480156103ff57600080fd5b50610408610bdc565b6040516104159190611a5b565b60405180910390f35b34801561042a57600080fd5b50610433610bef565b6040516104409190611ab2565b60405180910390f35b34801561045557600080fd5b5061045e610bf5565b60405161046b9190611ab2565b60405180910390f35b34801561048057600080fd5b50610489610bff565b6040516104969190611977565b60405180910390f35b3480156104ab57600080fd5b506104c660048036038101906104c19190611a00565b610c91565b6040516104d39190611a5b565b60405180910390f35b3480156104e857600080fd5b506104f1610cb4565b6040516104fe9190611ab2565b60405180910390f35b34801561051357600080fd5b5061051c610cba565b005b34801561052a57600080fd5b5061054560048036038101906105409190611b57565b610f5e565b6040516105529190611ab2565b60405180910390f35b34801561056757600080fd5b50610582600480360381019061057d9190611b84565b610fa7565b60405161058f9190611ab2565b60405180910390f35b3480156105a457600080fd5b506105bf60048036038101906105ba9190611bf0565b61102e565b005b3480156105cd57600080fd5b506105e860048036038101906105e39190611b57565b61110f565b6040516105f59190611ab2565b60405180910390f35b34801561060a57600080fd5b5061062560048036038101906106209190611a76565b611127565b60405161063291906118cc565b60405180910390f35b34801561064757600080fd5b50610650611166565b60405161065d91906118cc565b60405180910390f35b34801561067257600080fd5b5061067b61118c565b6040516106889190611d15565b60405180910390f35b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600380546106ca90611d66565b80601f01602080910402602001604051908101604052809291908181526020018280546106f690611d66565b80156107435780601f1061071857610100808354040283529160200191610743565b820191906000526020600020905b81548152906001019060200180831161072657829003601f168201915b5050505050905090565b60008061075861121a565b9050610765818585611222565b600191505092915050565b600d60009054906101000a900460ff166107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690611de3565b60405180910390fd5b6000600b5414610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb90611e75565b60405180910390fd5b80600b8190555042600c8190555050565b6000600254905090565b600b5481565b60008061083061121a565b905061083d858285611234565b6108488585856112c9565b60019150509392505050565b60006012905090565b6108656113bd565b6000600754826108759190611ec4565b9050803410156108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b190611f52565b60405180910390fd5b8034111561091b57600081346108d09190611f72565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610918573d6000803e3d6000fd5b50505b6109263033846112c9565b81600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109759190611fa6565b92505081905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156109e4573d6000803e3d6000fd5b5081600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610a8f57600a339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50610a98611403565b50565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b229061204c565b60405180910390fd5b600d60009054906101000a900460ff16610b7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7190611de3565b60405180910390fd5b80600b8190555050565b6000600b54905090565b600c5481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600d60009054906101000a900460ff1681565b60075481565b6000600c54905090565b606060048054610c0e90611d66565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3a90611d66565b8015610c875780601f10610c5c57610100808354040283529160200191610c87565b820191906000526020600020905b815481529060010190602001808311610c6a57829003601f168201915b5050505050905090565b600080610c9c61121a565b9050610ca98185856112c9565b600191505092915050565b60065481565b610cc26113bd565b600d60009054906101000a900460ff16610d11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0890611de3565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610da1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d98906120de565b60405180910390fd5b62278d00600c54610db29190611fa6565b421015610df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610deb90612170565b60405180910390fd5b600b54471015610e39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3090612202565b60405180910390fd5b600060065490506000600b54905060005b600a80549050811015610f4a576000600a8281548110610e6d57610e6c612222565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008484600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ee89190611ec4565b610ef29190612280565b90508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610f3a573d6000803e3d6000fd5b5050508080600101915050610e4a565b5042600c819055505050610f5c611403565b565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060065414611073576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106a906122fd565b60405180910390fd5b61107b610854565b60ff16600a61108a9190612450565b846110959190611ec4565b6006819055508260078190555081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600d60006101000a81548160ff0219169083151502179055506111093060065461140d565b50505050565b60096020528060005260406000206000915090505481565b600a818154811061113757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600a80548060200260200160405190810160405280929190818152602001828054801561121057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116111c6575b5050505050905090565b600033905090565b61122f838383600161148f565b505050565b60006112408484610fa7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156112c357818110156112b3578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016112aa9392919061249b565b60405180910390fd5b6112c28484848403600061148f565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361133b5760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161133291906118cc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113ad5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113a491906118cc565b60405180910390fd5b6113b8838383611666565b505050565b6002600554036113f9576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600581905550565b6001600581905550565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361147f5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161147691906118cc565b60405180910390fd5b61148b60008383611666565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036115015760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016114f891906118cc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115735760006040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161156a91906118cc565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611660578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516116579190611ab2565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116b85780600260008282546116ac9190611fa6565b9250508190555061178b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611744578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161173b9392919061249b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117d45780600260008282540392505081905550611821565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161187e9190611ab2565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118b68261188b565b9050919050565b6118c6816118ab565b82525050565b60006020820190506118e160008301846118bd565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611921578082015181840152602081019050611906565b60008484015250505050565b6000601f19601f8301169050919050565b6000611949826118e7565b61195381856118f2565b9350611963818560208601611903565b61196c8161192d565b840191505092915050565b60006020820190508181036000830152611991818461193e565b905092915050565b600080fd5b6119a7816118ab565b81146119b257600080fd5b50565b6000813590506119c48161199e565b92915050565b6000819050919050565b6119dd816119ca565b81146119e857600080fd5b50565b6000813590506119fa816119d4565b92915050565b60008060408385031215611a1757611a16611999565b5b6000611a25858286016119b5565b9250506020611a36858286016119eb565b9150509250929050565b60008115159050919050565b611a5581611a40565b82525050565b6000602082019050611a706000830184611a4c565b92915050565b600060208284031215611a8c57611a8b611999565b5b6000611a9a848285016119eb565b91505092915050565b611aac816119ca565b82525050565b6000602082019050611ac76000830184611aa3565b92915050565b600080600060608486031215611ae657611ae5611999565b5b6000611af4868287016119b5565b9350506020611b05868287016119b5565b9250506040611b16868287016119eb565b9150509250925092565b600060ff82169050919050565b611b3681611b20565b82525050565b6000602082019050611b516000830184611b2d565b92915050565b600060208284031215611b6d57611b6c611999565b5b6000611b7b848285016119b5565b91505092915050565b60008060408385031215611b9b57611b9a611999565b5b6000611ba9858286016119b5565b9250506020611bba858286016119b5565b9150509250929050565b611bcd81611a40565b8114611bd857600080fd5b50565b600081359050611bea81611bc4565b92915050565b60008060008060808587031215611c0a57611c09611999565b5b6000611c18878288016119eb565b9450506020611c29878288016119eb565b9350506040611c3a878288016119b5565b9250506060611c4b87828801611bdb565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611c8c816118ab565b82525050565b6000611c9e8383611c83565b60208301905092915050565b6000602082019050919050565b6000611cc282611c57565b611ccc8185611c62565b9350611cd783611c73565b8060005b83811015611d08578151611cef8882611c92565b9750611cfa83611caa565b925050600181019050611cdb565b5085935050505092915050565b60006020820190508181036000830152611d2f8184611cb7565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d7e57607f821691505b602082108103611d9157611d90611d37565b5b50919050565b7f54686973206973206e6f7420612072656e74616c2070726f7065727479000000600082015250565b6000611dcd601d836118f2565b9150611dd882611d97565b602082019050919050565b60006020820190508181036000830152611dfc81611dc0565b9050919050565b7f52656e74616c20696e636f6d6520616c726561647920696e697469616c697a6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e5f6021836118f2565b9150611e6a82611e03565b604082019050919050565b60006020820190508181036000830152611e8e81611e52565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ecf826119ca565b9150611eda836119ca565b9250828202611ee8816119ca565b91508282048414831517611eff57611efe611e95565b5b5092915050565b7f496e73756666696369656e74204554482073656e740000000000000000000000600082015250565b6000611f3c6015836118f2565b9150611f4782611f06565b602082019050919050565b60006020820190508181036000830152611f6b81611f2f565b9050919050565b6000611f7d826119ca565b9150611f88836119ca565b9250828203905081811115611fa057611f9f611e95565b5b92915050565b6000611fb1826119ca565b9150611fbc836119ca565b9250828201905080821115611fd457611fd3611e95565b5b92915050565b7f4f6e6c79207468652070726f7065727479206f776e65722063616e207365742060008201527f74686520696e636f6d6500000000000000000000000000000000000000000000602082015250565b6000612036602a836118f2565b915061204182611fda565b604082019050919050565b6000602082019050818103600083015261206581612029565b9050919050565b7f4f6e6c79207468652070726f7065727479206f776e65722063616e206469737460008201527f72696275746520696e636f6d6500000000000000000000000000000000000000602082015250565b60006120c8602d836118f2565b91506120d38261206c565b604082019050919050565b600060208201905081810360008301526120f7816120bb565b9050919050565b7f4d6f6e74686c7920696e636f6d6520646973747269627574696f6e206973206e60008201527f6f74206475652079657400000000000000000000000000000000000000000000602082015250565b600061215a602a836118f2565b9150612165826120fe565b604082019050919050565b600060208201905081810360008301526121898161214d565b9050919050565b7f4e6f7420656e6f7567682045544820696e2074686520636f6e7472616374207460008201527f6f20646973747269627574650000000000000000000000000000000000000000602082015250565b60006121ec602c836118f2565b91506121f782612190565b604082019050919050565b6000602082019050818103600083015261221b816121df565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061228b826119ca565b9150612296836119ca565b9250826122a6576122a5612251565b5b828204905092915050565b7f53616c6520616c726561647920696e697469616c697a65640000000000000000600082015250565b60006122e76018836118f2565b91506122f2826122b1565b602082019050919050565b60006020820190508181036000830152612316816122da565b9050919050565b60008160011c9050919050565b6000808291508390505b6001851115612374578086048111156123505761234f611e95565b5b600185161561235f5780820291505b808102905061236d8561231d565b9450612334565b94509492505050565b60008261238d5760019050612449565b8161239b5760009050612449565b81600181146123b157600281146123bb576123ea565b6001915050612449565b60ff8411156123cd576123cc611e95565b5b8360020a9150848211156123e4576123e3611e95565b5b50612449565b5060208310610133831016604e8410600b841016171561241f5782820a90508381111561241a57612419611e95565b5b612449565b61242c848484600161232a565b9250905081840481111561244357612442611e95565b5b81810290505b9392505050565b600061245b826119ca565b9150612466836119ca565b92506124937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461237d565b905092915050565b60006060820190506124b060008301866118bd565b6124bd6020830185611aa3565b6124ca6040830184611aa3565b94935050505056fea2646970667358221220a7aa7a08fb3f3f79543473a17baccd6e94f6458c954d6ead7e3610852d9d4d5d64736f6c634300081c0033";

type RentalPropertyERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RentalPropertyERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RentalPropertyERC20__factory extends ContractFactory {
  constructor(...args: RentalPropertyERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override deploy(
    _name: string,
    _symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<
      RentalPropertyERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): RentalPropertyERC20__factory {
    return super.connect(runner) as RentalPropertyERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RentalPropertyERC20Interface {
    return new Interface(_abi) as RentalPropertyERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RentalPropertyERC20 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as RentalPropertyERC20;
  }
}
