/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RentalPropertyERC20,
  RentalPropertyERC20Interface,
} from "../../../contracts/RentalTokenOwnership.sol/RentalPropertyERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_propertyOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_monthlyIncome",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "buyerTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "buyers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastIncomeDistribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monthlyIncome",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "propertyOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "propertyTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516120fe3803806120fe833981810160405281019061003291906105be565b85858160039081610043919061089a565b508060049081610053919061089a565b505050600160058190555061006c6100ff60201b60201c565b60ff16600a61007b9190610ace565b846100869190610b19565b6006819055508260078190555081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060098190555042600a819055506100f43060065461010860201b60201c565b505050505050610c1a565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361017a5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016101719190610b6a565b60405180910390fd5b61018c6000838361019060201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101e25780600260008282546101d69190610b85565b925050819055506102b5565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561026e578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161026593929190610bc8565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102fe578060026000828254039250508190555061034b565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103a89190610bff565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61041c826103d3565b810181811067ffffffffffffffff8211171561043b5761043a6103e4565b5b80604052505050565b600061044e6103b5565b905061045a8282610413565b919050565b600067ffffffffffffffff82111561047a576104796103e4565b5b610483826103d3565b9050602081019050919050565b60005b838110156104ae578082015181840152602081019050610493565b60008484015250505050565b60006104cd6104c88461045f565b610444565b9050828152602081018484840111156104e9576104e86103ce565b5b6104f4848285610490565b509392505050565b600082601f830112610511576105106103c9565b5b81516105218482602086016104ba565b91505092915050565b6000819050919050565b61053d8161052a565b811461054857600080fd5b50565b60008151905061055a81610534565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061058b82610560565b9050919050565b61059b81610580565b81146105a657600080fd5b50565b6000815190506105b881610592565b92915050565b60008060008060008060c087890312156105db576105da6103bf565b5b600087015167ffffffffffffffff8111156105f9576105f86103c4565b5b61060589828a016104fc565b965050602087015167ffffffffffffffff811115610626576106256103c4565b5b61063289828a016104fc565b955050604061064389828a0161054b565b945050606061065489828a0161054b565b935050608061066589828a016105a9565b92505060a061067689828a0161054b565b9150509295509295509295565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106d557607f821691505b6020821081036106e8576106e761068e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610713565b61075a8683610713565b95508019841693508086168417925050509392505050565b6000819050919050565b600061079761079261078d8461052a565b610772565b61052a565b9050919050565b6000819050919050565b6107b18361077c565b6107c56107bd8261079e565b848454610720565b825550505050565b600090565b6107da6107cd565b6107e58184846107a8565b505050565b5b81811015610809576107fe6000826107d2565b6001810190506107eb565b5050565b601f82111561084e5761081f816106ee565b61082884610703565b81016020851015610837578190505b61084b61084385610703565b8301826107ea565b50505b505050565b600082821c905092915050565b600061087160001984600802610853565b1980831691505092915050565b600061088a8383610860565b9150826002028217905092915050565b6108a382610683565b67ffffffffffffffff8111156108bc576108bb6103e4565b5b6108c682546106bd565b6108d182828561080d565b600060209050601f83116001811461090457600084156108f2578287015190505b6108fc858261087e565b865550610964565b601f198416610912866106ee565b60005b8281101561093a57848901518255600182019150602085019450602081019050610915565b868310156109575784890151610953601f891682610860565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156109f2578086048111156109ce576109cd61096c565b5b60018516156109dd5780820291505b80810290506109eb8561099b565b94506109b2565b94509492505050565b600082610a0b5760019050610ac7565b81610a195760009050610ac7565b8160018114610a2f5760028114610a3957610a68565b6001915050610ac7565b60ff841115610a4b57610a4a61096c565b5b8360020a915084821115610a6257610a6161096c565b5b50610ac7565b5060208310610133831016604e8410600b8410161715610a9d5782820a905083811115610a9857610a9761096c565b5b610ac7565b610aaa84848460016109a8565b92509050818404811115610ac157610ac061096c565b5b81810290505b9392505050565b6000610ad98261052a565b9150610ae48361052a565b9250610b117fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846109fb565b905092915050565b6000610b248261052a565b9150610b2f8361052a565b9250828202610b3d8161052a565b91508282048414831517610b5457610b5361096c565b5b5092915050565b610b6481610580565b82525050565b6000602082019050610b7f6000830184610b5b565b92915050565b6000610b908261052a565b9150610b9b8361052a565b9250828201905080821115610bb357610bb261096c565b5b92915050565b610bc28161052a565b82525050565b6000606082019050610bdd6000830186610b5b565b610bea6020830185610bb9565b610bf76040830184610bb9565b949350505050565b6000602082019050610c146000830184610bb9565b92915050565b6114d580610c296000396000f3fe6080604052600436106100fe5760003560e01c806370a0823111610095578063b01765b411610064578063b01765b414610340578063dd62ed3e1461036b578063f13656eb146103a8578063f2aa8218146103e5578063f446c38f14610422576100fe565b806370a08231146102705780637ff9b596146102ad57806395d89b41146102d8578063a9059cbb14610303576100fe565b806323b872dd116100d157806323b872dd146101c1578063313ce567146101fe5780633610724e146102295780635e73018c14610245576100fe565b806306fdde0314610103578063095ea7b31461012e57806318160ddd1461016b578063197a65f314610196575b600080fd5b34801561010f57600080fd5b5061011861044d565b604051610125919061101a565b60405180910390f35b34801561013a57600080fd5b50610155600480360381019061015091906110d5565b6104df565b6040516101629190611130565b60405180910390f35b34801561017757600080fd5b50610180610502565b60405161018d919061115a565b60405180910390f35b3480156101a257600080fd5b506101ab61050c565b6040516101b8919061115a565b60405180910390f35b3480156101cd57600080fd5b506101e860048036038101906101e39190611175565b610512565b6040516101f59190611130565b60405180910390f35b34801561020a57600080fd5b50610213610541565b60405161022091906111e4565b60405180910390f35b610243600480360381019061023e91906111ff565b61054a565b005b34801561025157600080fd5b5061025a610788565b604051610267919061115a565b60405180910390f35b34801561027c57600080fd5b506102976004803603810190610292919061122c565b61078e565b6040516102a4919061115a565b60405180910390f35b3480156102b957600080fd5b506102c26107d6565b6040516102cf919061115a565b60405180910390f35b3480156102e457600080fd5b506102ed6107dc565b6040516102fa919061101a565b60405180910390f35b34801561030f57600080fd5b5061032a600480360381019061032591906110d5565b61086e565b6040516103379190611130565b60405180910390f35b34801561034c57600080fd5b50610355610891565b604051610362919061115a565b60405180910390f35b34801561037757600080fd5b50610392600480360381019061038d9190611259565b610897565b60405161039f919061115a565b60405180910390f35b3480156103b457600080fd5b506103cf60048036038101906103ca919061122c565b61091e565b6040516103dc919061115a565b60405180910390f35b3480156103f157600080fd5b5061040c600480360381019061040791906111ff565b610936565b60405161041991906112a8565b60405180910390f35b34801561042e57600080fd5b50610437610975565b60405161044491906112a8565b60405180910390f35b60606003805461045c906112f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610488906112f2565b80156104d55780601f106104aa576101008083540402835291602001916104d5565b820191906000526020600020905b8154815290600101906020018083116104b857829003601f168201915b5050505050905090565b6000806104ea61099b565b90506104f78185856109a3565b600191505092915050565b6000600254905090565b60095481565b60008061051d61099b565b905061052a8582856109b5565b610535858585610a4a565b60019150509392505050565b60006012905090565b610552610b3e565b6000600754826105629190611352565b9050803410156105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059e906113e0565b60405180910390fd5b8034111561060857600081346105bd9190611400565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610605573d6000803e3d6000fd5b50505b610613303384610a4a565b81600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106629190611434565b92505081905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156106d1573d6000803e3d6000fd5b5081600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361077c57600c339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50610785610b84565b50565b600a5481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60075481565b6060600480546107eb906112f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610817906112f2565b80156108645780601f1061083957610100808354040283529160200191610864565b820191906000526020600020905b81548152906001019060200180831161084757829003601f168201915b5050505050905090565b60008061087961099b565b9050610886818585610a4a565b600191505092915050565b60065481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600b6020528060005260406000206000915090505481565b600c818154811061094657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6109b08383836001610b8e565b505050565b60006109c18484610897565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610a445781811015610a34578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a2b93929190611468565b60405180910390fd5b610a4384848484036000610b8e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610abc5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ab391906112a8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b2e5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b2591906112a8565b60405180910390fd5b610b39838383610d65565b505050565b600260055403610b7a576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600581905550565b6001600581905550565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c005760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610bf791906112a8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c725760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c6991906112a8565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610d5f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d56919061115a565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610db7578060026000828254610dab9190611434565b92505081905550610e8a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e43578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e3a93929190611468565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ed35780600260008282540392505081905550610f20565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f7d919061115a565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fc4578082015181840152602081019050610fa9565b60008484015250505050565b6000601f19601f8301169050919050565b6000610fec82610f8a565b610ff68185610f95565b9350611006818560208601610fa6565b61100f81610fd0565b840191505092915050565b600060208201905081810360008301526110348184610fe1565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061106c82611041565b9050919050565b61107c81611061565b811461108757600080fd5b50565b60008135905061109981611073565b92915050565b6000819050919050565b6110b28161109f565b81146110bd57600080fd5b50565b6000813590506110cf816110a9565b92915050565b600080604083850312156110ec576110eb61103c565b5b60006110fa8582860161108a565b925050602061110b858286016110c0565b9150509250929050565b60008115159050919050565b61112a81611115565b82525050565b60006020820190506111456000830184611121565b92915050565b6111548161109f565b82525050565b600060208201905061116f600083018461114b565b92915050565b60008060006060848603121561118e5761118d61103c565b5b600061119c8682870161108a565b93505060206111ad8682870161108a565b92505060406111be868287016110c0565b9150509250925092565b600060ff82169050919050565b6111de816111c8565b82525050565b60006020820190506111f960008301846111d5565b92915050565b6000602082840312156112155761121461103c565b5b6000611223848285016110c0565b91505092915050565b6000602082840312156112425761124161103c565b5b60006112508482850161108a565b91505092915050565b600080604083850312156112705761126f61103c565b5b600061127e8582860161108a565b925050602061128f8582860161108a565b9150509250929050565b6112a281611061565b82525050565b60006020820190506112bd6000830184611299565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061130a57607f821691505b60208210810361131d5761131c6112c3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061135d8261109f565b91506113688361109f565b92508282026113768161109f565b9150828204841483151761138d5761138c611323565b5b5092915050565b7f496e73756666696369656e74204554482073656e740000000000000000000000600082015250565b60006113ca601583610f95565b91506113d582611394565b602082019050919050565b600060208201905081810360008301526113f9816113bd565b9050919050565b600061140b8261109f565b91506114168361109f565b925082820390508181111561142e5761142d611323565b5b92915050565b600061143f8261109f565b915061144a8361109f565b925082820190508082111561146257611461611323565b5b92915050565b600060608201905061147d6000830186611299565b61148a602083018561114b565b611497604083018461114b565b94935050505056fea26469706673582212200b4b64b9591c93d363de9cfdc3c37a6e2478cbedd49501c59e00c1bb00fcdcdb64736f6c634300081c0033";

type RentalPropertyERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RentalPropertyERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RentalPropertyERC20__factory extends ContractFactory {
  constructor(...args: RentalPropertyERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _totalSupply: BigNumberish,
    _tokenPrice: BigNumberish,
    _propertyOwner: AddressLike,
    _monthlyIncome: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _totalSupply,
      _tokenPrice,
      _propertyOwner,
      _monthlyIncome,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _totalSupply: BigNumberish,
    _tokenPrice: BigNumberish,
    _propertyOwner: AddressLike,
    _monthlyIncome: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _totalSupply,
      _tokenPrice,
      _propertyOwner,
      _monthlyIncome,
      overrides || {}
    ) as Promise<
      RentalPropertyERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): RentalPropertyERC20__factory {
    return super.connect(runner) as RentalPropertyERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RentalPropertyERC20Interface {
    return new Interface(_abi) as RentalPropertyERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RentalPropertyERC20 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as RentalPropertyERC20;
  }
}
