/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PropertyERC20,
  PropertyERC20Interface,
} from "../../../contracts/TokenOwnership.sol/PropertyERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_propertyOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "buyerTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "buyers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBuyers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "getTokensBought",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "propertyOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "propertyTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516122fa3803806122fa833981810160405281019061003291906105af565b848481600390816100439190610879565b5080600490816100539190610879565b505050600160058190555061006c6100f060201b60201c565b60ff16600a61007b9190610aad565b836100869190610af8565b6006819055508160078190555080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100e6306006546100f960201b60201c565b5050505050610bf9565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361016b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016101629190610b49565b60405180910390fd5b61017d6000838361018160201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101d35780600260008282546101c79190610b64565b925050819055506102a6565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561025f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161025693929190610ba7565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102ef578060026000828254039250508190555061033c565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103999190610bde565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61040d826103c4565b810181811067ffffffffffffffff8211171561042c5761042b6103d5565b5b80604052505050565b600061043f6103a6565b905061044b8282610404565b919050565b600067ffffffffffffffff82111561046b5761046a6103d5565b5b610474826103c4565b9050602081019050919050565b60005b8381101561049f578082015181840152602081019050610484565b60008484015250505050565b60006104be6104b984610450565b610435565b9050828152602081018484840111156104da576104d96103bf565b5b6104e5848285610481565b509392505050565b600082601f830112610502576105016103ba565b5b81516105128482602086016104ab565b91505092915050565b6000819050919050565b61052e8161051b565b811461053957600080fd5b50565b60008151905061054b81610525565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061057c82610551565b9050919050565b61058c81610571565b811461059757600080fd5b50565b6000815190506105a981610583565b92915050565b600080600080600060a086880312156105cb576105ca6103b0565b5b600086015167ffffffffffffffff8111156105e9576105e86103b5565b5b6105f5888289016104ed565b955050602086015167ffffffffffffffff811115610616576106156103b5565b5b610622888289016104ed565b94505060406106338882890161053c565b93505060606106448882890161053c565b92505060806106558882890161059a565b9150509295509295909350565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106b457607f821691505b6020821081036106c7576106c661066d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261072f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826106f2565b61073986836106f2565b95508019841693508086168417925050509392505050565b6000819050919050565b600061077661077161076c8461051b565b610751565b61051b565b9050919050565b6000819050919050565b6107908361075b565b6107a461079c8261077d565b8484546106ff565b825550505050565b600090565b6107b96107ac565b6107c4818484610787565b505050565b5b818110156107e8576107dd6000826107b1565b6001810190506107ca565b5050565b601f82111561082d576107fe816106cd565b610807846106e2565b81016020851015610816578190505b61082a610822856106e2565b8301826107c9565b50505b505050565b600082821c905092915050565b600061085060001984600802610832565b1980831691505092915050565b6000610869838361083f565b9150826002028217905092915050565b61088282610662565b67ffffffffffffffff81111561089b5761089a6103d5565b5b6108a5825461069c565b6108b08282856107ec565b600060209050601f8311600181146108e357600084156108d1578287015190505b6108db858261085d565b865550610943565b601f1984166108f1866106cd565b60005b82811015610919578489015182556001820191506020850194506020810190506108f4565b868310156109365784890151610932601f89168261083f565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156109d1578086048111156109ad576109ac61094b565b5b60018516156109bc5780820291505b80810290506109ca8561097a565b9450610991565b94509492505050565b6000826109ea5760019050610aa6565b816109f85760009050610aa6565b8160018114610a0e5760028114610a1857610a47565b6001915050610aa6565b60ff841115610a2a57610a2961094b565b5b8360020a915084821115610a4157610a4061094b565b5b50610aa6565b5060208310610133831016604e8410600b8410161715610a7c5782820a905083811115610a7757610a7661094b565b5b610aa6565b610a898484846001610987565b92509050818404811115610aa057610a9f61094b565b5b81810290505b9392505050565b6000610ab88261051b565b9150610ac38361051b565b9250610af07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846109da565b905092915050565b6000610b038261051b565b9150610b0e8361051b565b9250828202610b1c8161051b565b91508282048414831517610b3357610b3261094b565b5b5092915050565b610b4381610571565b82525050565b6000602082019050610b5e6000830184610b3a565b92915050565b6000610b6f8261051b565b9150610b7a8361051b565b9250828201905080821115610b9257610b9161094b565b5b92915050565b610ba18161051b565b82525050565b6000606082019050610bbc6000830186610b3a565b610bc96020830185610b98565b610bd66040830184610b98565b949350505050565b6000602082019050610bf36000830184610b98565b92915050565b6116f280610c086000396000f3fe6080604052600436106101095760003560e01c806395d89b4111610095578063dd62ed3e11610064578063dd62ed3e14610388578063f13656eb146103c5578063f2aa821814610402578063f446c38f1461043f578063f64bfaba1461046a57610109565b806395d89b41146102b8578063a9059cbb146102e3578063b01765b414610320578063d74a375d1461034b57610109565b806323b872dd116100dc57806323b872dd146101cc578063313ce567146102095780633610724e1461023457806370a08231146102505780637ff9b5961461028d57610109565b80630605062f1461010e57806306fdde0314610139578063095ea7b31461016457806318160ddd146101a1575b600080fd5b34801561011a57600080fd5b50610123610495565b6040516101309190611108565b60405180910390f35b34801561014557600080fd5b5061014e6104bf565b60405161015b91906111b3565b60405180910390f35b34801561017057600080fd5b5061018b6004803603810190610186919061123c565b610551565b6040516101989190611297565b60405180910390f35b3480156101ad57600080fd5b506101b6610574565b6040516101c391906112c1565b60405180910390f35b3480156101d857600080fd5b506101f360048036038101906101ee91906112dc565b61057e565b6040516102009190611297565b60405180910390f35b34801561021557600080fd5b5061021e6105ad565b60405161022b919061134b565b60405180910390f35b61024e60048036038101906102499190611366565b6105b6565b005b34801561025c57600080fd5b5061027760048036038101906102729190611393565b6107f4565b60405161028491906112c1565b60405180910390f35b34801561029957600080fd5b506102a261083c565b6040516102af91906112c1565b60405180910390f35b3480156102c457600080fd5b506102cd610842565b6040516102da91906111b3565b60405180910390f35b3480156102ef57600080fd5b5061030a6004803603810190610305919061123c565b6108d4565b6040516103179190611297565b60405180910390f35b34801561032c57600080fd5b506103356108f7565b60405161034291906112c1565b60405180910390f35b34801561035757600080fd5b50610372600480360381019061036d9190611393565b6108fd565b60405161037f91906112c1565b60405180910390f35b34801561039457600080fd5b506103af60048036038101906103aa91906113c0565b610946565b6040516103bc91906112c1565b60405180910390f35b3480156103d157600080fd5b506103ec60048036038101906103e79190611393565b6109cd565b6040516103f991906112c1565b60405180910390f35b34801561040e57600080fd5b5061042960048036038101906104249190611366565b6109e5565b6040516104369190611108565b60405180910390f35b34801561044b57600080fd5b50610454610a24565b6040516104619190611108565b60405180910390f35b34801561047657600080fd5b5061047f610a4a565b60405161048c91906114be565b60405180910390f35b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600380546104ce9061150f565b80601f01602080910402602001604051908101604052809291908181526020018280546104fa9061150f565b80156105475780601f1061051c57610100808354040283529160200191610547565b820191906000526020600020905b81548152906001019060200180831161052a57829003601f168201915b5050505050905090565b60008061055c610ad8565b9050610569818585610ae0565b600191505092915050565b6000600254905090565b600080610589610ad8565b9050610596858285610af2565b6105a1858585610b87565b60019150509392505050565b60006012905090565b6105be610c7b565b6000600754826105ce919061156f565b905080341015610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a906115fd565b60405180910390fd5b803411156106745760008134610629919061161d565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610671573d6000803e3d6000fd5b50505b61067f303384610b87565b81600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106ce9190611651565b92505081905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561073d573d6000803e3d6000fd5b5081600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036107e857600a339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b506107f1610cc1565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60075481565b6060600480546108519061150f565b80601f016020809104026020016040519081016040528092919081815260200182805461087d9061150f565b80156108ca5780601f1061089f576101008083540402835291602001916108ca565b820191906000526020600020905b8154815290600101906020018083116108ad57829003601f168201915b5050505050905090565b6000806108df610ad8565b90506108ec818585610b87565b600191505092915050565b60065481565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60096020528060005260406000206000915090505481565b600a81815481106109f557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600a805480602002602001604051908101604052809291908181526020018280548015610ace57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a84575b5050505050905090565b600033905090565b610aed8383836001610ccb565b505050565b6000610afe8484610946565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610b815781811015610b71578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610b6893929190611685565b60405180910390fd5b610b8084848484036000610ccb565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bf95760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610bf09190611108565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c6b5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c629190611108565b60405180910390fd5b610c76838383610ea2565b505050565b600260055403610cb7576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600581905550565b6001600581905550565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d3d5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d349190611108565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610daf5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610da69190611108565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610e9c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e9391906112c1565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ef4578060026000828254610ee89190611651565b92505081905550610fc7565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f80578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f7793929190611685565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611010578060026000828254039250508190555061105d565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110ba91906112c1565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110f2826110c7565b9050919050565b611102816110e7565b82525050565b600060208201905061111d60008301846110f9565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561115d578082015181840152602081019050611142565b60008484015250505050565b6000601f19601f8301169050919050565b600061118582611123565b61118f818561112e565b935061119f81856020860161113f565b6111a881611169565b840191505092915050565b600060208201905081810360008301526111cd818461117a565b905092915050565b600080fd5b6111e3816110e7565b81146111ee57600080fd5b50565b600081359050611200816111da565b92915050565b6000819050919050565b61121981611206565b811461122457600080fd5b50565b60008135905061123681611210565b92915050565b60008060408385031215611253576112526111d5565b5b6000611261858286016111f1565b925050602061127285828601611227565b9150509250929050565b60008115159050919050565b6112918161127c565b82525050565b60006020820190506112ac6000830184611288565b92915050565b6112bb81611206565b82525050565b60006020820190506112d660008301846112b2565b92915050565b6000806000606084860312156112f5576112f46111d5565b5b6000611303868287016111f1565b9350506020611314868287016111f1565b925050604061132586828701611227565b9150509250925092565b600060ff82169050919050565b6113458161132f565b82525050565b6000602082019050611360600083018461133c565b92915050565b60006020828403121561137c5761137b6111d5565b5b600061138a84828501611227565b91505092915050565b6000602082840312156113a9576113a86111d5565b5b60006113b7848285016111f1565b91505092915050565b600080604083850312156113d7576113d66111d5565b5b60006113e5858286016111f1565b92505060206113f6858286016111f1565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611435816110e7565b82525050565b6000611447838361142c565b60208301905092915050565b6000602082019050919050565b600061146b82611400565b611475818561140b565b93506114808361141c565b8060005b838110156114b1578151611498888261143b565b97506114a383611453565b925050600181019050611484565b5085935050505092915050565b600060208201905081810360008301526114d88184611460565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061152757607f821691505b60208210810361153a576115396114e0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061157a82611206565b915061158583611206565b925082820261159381611206565b915082820484148315176115aa576115a9611540565b5b5092915050565b7f496e73756666696369656e74204554482073656e740000000000000000000000600082015250565b60006115e760158361112e565b91506115f2826115b1565b602082019050919050565b60006020820190508181036000830152611616816115da565b9050919050565b600061162882611206565b915061163383611206565b925082820390508181111561164b5761164a611540565b5b92915050565b600061165c82611206565b915061166783611206565b925082820190508082111561167f5761167e611540565b5b92915050565b600060608201905061169a60008301866110f9565b6116a760208301856112b2565b6116b460408301846112b2565b94935050505056fea264697066735822122032ab6682b785c713ff8c499c3fa7da6e81450f69a8e3c9bd0deab701f18f050864736f6c634300081c0033";

type PropertyERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PropertyERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PropertyERC20__factory extends ContractFactory {
  constructor(...args: PropertyERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _totalSupply: BigNumberish,
    _tokenPrice: BigNumberish,
    _propertyOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _totalSupply,
      _tokenPrice,
      _propertyOwner,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _totalSupply: BigNumberish,
    _tokenPrice: BigNumberish,
    _propertyOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _totalSupply,
      _tokenPrice,
      _propertyOwner,
      overrides || {}
    ) as Promise<
      PropertyERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PropertyERC20__factory {
    return super.connect(runner) as PropertyERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PropertyERC20Interface {
    return new Interface(_abi) as PropertyERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PropertyERC20 {
    return new Contract(address, _abi, runner) as unknown as PropertyERC20;
  }
}
